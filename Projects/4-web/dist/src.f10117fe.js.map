{"version":3,"sources":["src/models/User.ts","src/index.ts"],"names":[],"mappings":";;;;;;ACAA,IAAA,MAAA,GAAA,OAAA,CAAA,eAAA,CAAA;ADOA,IAAA,IAAA;ACLA,ADKA,ICLM,IAAI,GAAG,IAAI,MAAA,CAAA,IAAJ,CAAS;ADKtB,ECLwB,IAAI,EAAE,IDK9B,ICLsB;EAAkB,ADUtC,GCVyC,EAAE,IDU3C,IAAA,CAAoB,IAApB,EAAmC;ACVf,CAAT,CAAb,EDUsB,KAAA,IAAA,GAAA,IAAA,CAAe,CAJnC;ACJF,IAAI,ADKF,CCLG,GAAL,CAAS;EAAE,IAAI,EAAE;AAAR,CAAT,GDMU,KAAA,MAAA,GAAwC,EAAxC;ACJV,EDMyC,KCNlC,CAAC,GAAR,CAAY,IAAI,CAAC,GAAL,CAAS,MAAT,CAAZ;AACA,OAAO,CAAC,GAAR,CAAY,IAAI,CAAC,GAAL,CAAS,KAAT,CAAZ;AAEA,EDKS,ECLL,CAAC,CDKI,CCLT,ADKS,CCLD,QAAR,ADKS,CAAA,CCLS,EDKT,GAAP,OCLgB,GDKL,QAAX,EAA2B;ECJ3B,EDKE,KCLK,CAAC,CDKC,ECLT,CAAY,EDKE,IAAL,CAAU,CCLnB,ODKS,CAAP;ACJH,CAFD,CDOG,CAFM;ACDT,IAAI,CAAC,EAAL,CAAQ,QAAR,EAAkB,YAAA;EAChB,ADIO,IAAA,CAAA,ECJA,CAAC,GAAR,CAAY,EDIL,CAAA,GAAA,GAAP,UCJA,ADIW,MAAX,EAA4B;ACH7B,CAFD,GDMI,MAAM,CAAC,MAAP,CAAc,KAAK,IAAnB,EAAyB,MAAzB;ACFJ,EDGG,CAFM,CCDL,CAAC,EAAL,CAAQ,MAAR,EAAgB,YAAA;EACd,OAAO,CAAC,GAAR,CAAY,UAAZ;AACD,CAFD,CDKS,IAAA,CAAA,SAAA,CAAA,EAAA,GAAP,UAAU,SAAV,EAA6B,QAA7B,EAA+C;ACDjD,IAAI,ADEA,CCFC,EAAL,CAAQ,MAAR,EAAgB,YAAA;EACd,EDEE,IAAM,CCFD,CAAC,GAAR,CAAY,EDEI,GAAG,KAAK,MAAL,CAAY,GCF/B,MDEmB,KAA0B,EAA3C;ACDH,CAFD,GDII,QAAQ,CAAC,IAAT,CAAc,QAAd;ACAJ,IDCI,GCDG,CAAC,CDCC,ECDT,CAAY,GDCR,CCDJ,ADCgB,SAAZ,IAAyB,QAAzB;ACCJ,EDAG,CALM,CCKL,CAAC,OAAL,CAAa,QAAb;AACA,IAAI,CAAC,OAAL,CAAa,MAAb;AACA,EDAS,ECAL,CAAC,CDAI,CAAA,KCAT,CAAa,GDAJ,CAAA,ECAT,KDAS,GAAP,UAAe,SAAf,EAAgC;ACClC,IAAI,ADAA,CCAC,GDAK,ICAV,CAAa,GDAK,GAAG,KAAK,GCA1B,GDAqB,CAAY,SAAZ,CAAjB;;IACA,IAAI,CAAC,QAAD,IAAa,QAAQ,CAAC,MAAT,KAAoB,CAArC,EAAwC;MACtC;IACD;;IACD,QAAQ,CAAC,OAAT,CAAiB,UAAC,QAAD,EAAS;MAAK,OAAA,QAAQ,EAAR;IAAU,CAAzC;EACD,CANM;;EAOT,OAAA,IAAA;AA7BA,CAAA,EAAA;;AAAa,OAAA,CAAA,IAAA,GAAA,IAAA","file":"src.f10117fe.js","sourceRoot":"..","sourcesContent":["interface UserProps {\n  name?: string;\n  age?: number;\n}\n\ntype Callback = () => void;\n\nexport class User {\n  // events is an object, key names are unknown but they will be strings and\n  // will point at arrays of callbacks\n  private events: { [key: string]: Callback[] } = {};\n\n  constructor(private data: UserProps) {}\n\n  public get(propName: string): number | string {\n    return this.data[propName];\n  }\n\n  public set(update: UserProps): void {\n    Object.assign(this.data, update);\n  }\n\n  public on(eventName: string, callback: Callback): void {\n    // if there are no handlers, just fallback to init with an empty array\n    const handlers = this.events[eventName] || [];\n    handlers.push(callback);\n    this.events[eventName] = handlers;\n  }\n\n  public trigger(eventName: string): void {\n    const handlers = this.events[eventName];\n    if (!handlers || handlers.length === 0) {\n      return;\n    }\n    handlers.forEach((callback) => callback());\n  }\n}\n","import { User } from './models/User';\n\nconst user = new User({ name: 'Myname', age: 20 });\n\nuser.set({ name: 'Max' });\n\nconsole.log(user.get('name'));\nconsole.log(user.get('age'));\n\nuser.on('change', () => {\n  console.log('Hello!');\n});\n\nuser.on('change', () => {\n  console.log(`This is a message`);\n});\n\nuser.on('goof', () => {\n  console.log(`Shmingus`);\n});\n\nuser.on('save', () => {\n  console.log(`Save was triggered`);\n});\n\nconsole.log(user);\n\nuser.trigger('change');\nuser.trigger('goof');\nuser.trigger('save');\nuser.trigger('asdlfjhaslkf');\n"]}